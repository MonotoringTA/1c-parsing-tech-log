

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	РежимРабочегоСтола = Истина;
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		ОтборЗамер = Параметры.Отбор.Владелец;
		РежимРабочегоСтола = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтборЗамер", "ТолькоПросмотр", Истина);
	Иначе
		Настройки = ВосстановитьНастройкиОтборов();
		ОтборЗамер = Настройки.ОтборЗамер;
		ОтборДлительность = Настройки.ОтборДлительность;
		ОбновитьСвойстваДинамическогоСписка(ОтборЗамер,КоличествоЭлементов);
	КонецЕсли;
	УстановитьОтборВладелец(ЭтаФорма);
	УстановитьОтборДлительность(ЭтаФорма);
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// добавим если нет отбор по дате
	ЭлементОтбора = КомпоновкаДанныхКлиентСервер.ДобавитьОтборПользовательскиеНастройки(
		ЭтаФорма.Список.КомпоновщикНастроек, 
		"ДатаСобытия", 
		Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоЭтогоДня), 
		ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ,
		Неопределено,
		Новый Структура("ЗаменятьСуществующий",Ложь) 
		);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборВладелец(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "Владелец", Форма.ОтборЗамер, , , ЗначениеЗаполнено(Форма.ОтборЗамер), , );
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборДлительность(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ДлительностьМкс", Форма.ОтборДлительность * 1000000, ВидСравненияКомпоновкиДанных.БольшеИлиРавно, , ЗначениеЗаполнено(Форма.ОтборДлительность), , );
КонецПроцедуры

&НаКлиенте
Процедура ОтборДлительностьПриИзменении(Элемент)
	УстановитьОтборДлительность(ЭтаФорма);
	СохранитьНастройкиОтборовКлиент();
КонецПроцедуры


&НаКлиенте
Процедура ОтборЗамерПриИзменении(Элемент)
	ОбновитьСвойстваДинамическогоСписка(ОтборЗамер,КоличествоЭлементов);
	УстановитьОтборВладелец(ЭтаФорма);
	СохранитьНастройкиОтборовКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиОтборовКлиент()
	Если РежимРабочегоСтола = Истина Тогда
		СохранитьНастройкиОтборов(ПолучитьНастройкиКлиент());
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНастройкиКлиент()
	Настройки = Новый Структура;
	Настройки.Вставить("ОтборЗамер", ОтборЗамер);
	Настройки.Вставить("ОтборДлительность", ОтборДлительность);
	Возврат Настройки;	
КонецФункции

&НаСервереБезКонтекста
Функция ВосстановитьНастройкиОтборов()
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СобытияЗамераФормаСписка", "НастройкиОтбора");
	НастройкиРезультат = Новый Структура("ОтборЗамер, ОтборДлительность");
	Если ТипЗнч(Настройки)=Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(НастройкиРезультат, Настройки);
	КонецЕсли;
	Возврат НастройкиРезультат;
КонецФункции 

&НаСервереБезКонтекста
Процедура СохранитьНастройкиОтборов(Настройки)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СобытияЗамераФормаСписка", "НастройкиОтбора", Настройки);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле=Элементы.Наименование 
		ИЛИ Поле=Элементы.ДатаСобытия 
		ИЛИ Поле=Элементы.ДатаСобытияМкс
		ИЛИ Поле=Элементы.ДлительностьМкс
		ИЛИ Поле=Элементы.Ссылка
		ИЛИ Поле=Элементы.ТипСобытия
		ИЛИ Поле=Элементы.УровеньСобытия Тогда
		СтандартнаяОбработка = Истина;
	Иначе
		СтандартнаяОбработка = Ложь;
		//пытаемся открыть значение
		ТД = Элемент.ТекущиеДанные;
		ОткрываемоеЗначение = Неопределено;
		Если Поле = Элементы.Владелец Тогда
			ОткрываемоеЗначение = ТД.Владелец;
		ИначеЕсли Поле = Элементы.Файл Тогда 
			ОткрываемоеЗначение = ТД.Файл;
		КонецЕсли;
		ЗаголовокЗначения = "";
		Если Лев(Поле.Имя,7)="Ссылка_" Тогда
			ЗаголовокЗначения = Сред(Поле.Имя, 8);
 			ОткрываемоеЗначение = ПолучитьРеквизитПоИмени(ВыбраннаяСтрока, ЗаголовокЗначения);
		ИначеЕсли Лев(Поле.Имя,13)="элемент_внеш_" Тогда
			// найдем имя реквизита по массиву динамических полей
			Для каждого стр из ДополнительныеРеквизиты.МассивРеквизитов Цикл
				Если стр.ИмяНовгоЭлемента=Поле.Имя Тогда
					ЗаголовокЗначения = стр.ИмяРеквизита;
					Прервать;
				Конецесли;
			КонецЦикла;
 			ОткрываемоеЗначение = ПолучитьРеквизитПоИмени(ВыбраннаяСтрока, ЗаголовокЗначения);
 		КонецЕсли; 			
		Если ОткрываемоеЗначение = Неопределено Тогда
			//пусто
		ИначеЕсли ТипЗнч(ОткрываемоеЗначение)=Тип("Строка") Тогда
			ПоказатьСтроку(ОткрываемоеЗначение, СтрШаблон("%1\%2: %3",ТД.Файл,ТД.Наименование,ЗаголовокЗначения));
		Иначе
			ПоказатьЗначение(,ОткрываемоеЗначение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтроку(ОткрываемоеЗначение, ЗаголовокТекста = "")
	Т = Новый ТекстовыйДокумент();
	Т.ДобавитьСтроку(ОткрываемоеЗначение);
	Т.Показать(ЗаголовокТекста);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитПоИмени(ЗНАЧ Ссылка, ЗНАЧ ИмяРеквизита)
	Результат = Неопределено;
	ИмяРеквизитаБезСкобок = "";
	Если Лев(ИмяРеквизита,1)="[" И Прав(ИмяРеквизита,1)="]" Тогда
		ИмяРеквизитаБезСкобок = Сред(ИмяРеквизита,2,СтрДлина(ИмяРеквизита)-2);
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СобытияЗамераКлючевыеСвойства.Значение
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
	|ГДЕ
	|	СобытияЗамераКлючевыеСвойства.Ссылка = &Ссылка
	|	И СобытияЗамераКлючевыеСвойства.Свойство.Наименование = &ИмяРеквизита
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СобытияЗамераКлючевыеСвойства.Значение
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК СобытияЗамераКлючевыеСвойства
	|ГДЕ
	|	&ИмяРеквизитаБезСкобок <> """"
	|	И СобытияЗамераКлючевыеСвойства.Ссылка = &Ссылка
	|	И СобытияЗамераКлючевыеСвойства.Свойство.Наименование = &ИмяРеквизитаБезСкобок");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ИмяРеквизита", ИмяРеквизита);
	Запрос.УстановитьПараметр("ИмяРеквизитаБезСкобок", ИмяРеквизитаБезСкобок);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить()[0].Значение;
	КонецЕсли;
	Возврат Результат;
КонецФункции


&НаСервере
Процедура ОбновитьСвойстваДинамическогоСписка(Замер,Количество)

	// удалим если были добавлены
	// TODO: Оптимизировать процедуру, если те же поля то не надо удалять и добавлять
	Если НЕ ДополнительныеРеквизиты=Неопределено Тогда		
		Для каждого стр из ДополнительныеРеквизиты.МассивРеквизитов Цикл
			Попытка
				ПрограммноеИзменениеФормСервер.УдалитьЭлемент(ЭтаФорма,стр.ИмяНовгоЭлемента);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Замер) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнятьСписокНаборомПолей = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Замер,"ДополнятьСписокНаборомПолей");
	
	Если ДополнятьСписокНаборомПолей=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеРеквизиты = новый Структура("МассивРеквизитов",новый Массив);
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.Ссылка,
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.Использовать,
	|	Т.Свойство,
	|	Т.ИмяРеквизита
	|ИЗ
	|	Справочник.Замеры.ДополнительныеПоляСвойствДляСписка КАК Т
	|ГДЕ
	|	Т.Ссылка = &Замер
	|	И Т.Использовать = ИСТИНА
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Запрос.УстановитьПараметр("Замер", Замер);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить(); 
	
	Для каждого стр из ТаблицаДанных Цикл
		
		Попытка
			
			Количество = Количество+1;
			ИмяНовгоЭлемента = "элемент_внеш_"+XMLСтрока(Количество);
			ИмяРеквизита = ?(ЗначениеЗаполнено(стр.ИмяРеквизита),стр.ИмяРеквизита,ОбщегоНазначения.ЗначениеРеквизитаОбъекта(стр.Свойство,"Наименование"));
			ПутьКДанынм = "Список.Ссылка."+ИмяРеквизита;
			ПрограммноеИзменениеФормСервер.ВставитьЭлемент(ЭтаФорма,ИмяНовгоЭлемента,Тип("ПолеФормы"),
				Новый Структура("ИмяРодителя,Вид,ПутьКДанным","Список",ВидПоляФормы.ПолеВвода,ПутьКДанынм));
			ДополнительныеРеквизиты.МассивРеквизитов.Добавить(новый Структура("ИмяНовгоЭлемента,ПутьКДанным,ИмяРеквизита",ИмяНовгоЭлемента,ПутьКДанынм,ИмяРеквизита));
			
		Исключение
			
			ТекстОшибки = "Ошибка при добавлении свойства замера ("+стр.ИмяРеквизита+") в список! Актуализируйте таблицу дополнительных реквизитов для списка в замере!" +Символы.ПС+ ОписаниеОшибки();
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Программное изменение форм'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
			Сообщить(ТекстОшибки,СтатусСообщения.ОченьВажное);	
			
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

